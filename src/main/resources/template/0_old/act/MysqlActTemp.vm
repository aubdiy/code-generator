package ${systemPackage}.act;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import ${systemPackage}.biz.${tableNameClass}Biz;
import ${systemPackage}.ent.${tableNameClass};
import ${basePackage}.util.Page;

@Controller
@RequestMapping("${requestMapping}")
public class ${tableNameClass}Act {

	@Autowired
	private ${tableNameClass}Biz ${tableNameVariable}Biz;

	@RequestMapping("list/{pageNum}")
	public String list(@RequestParam Map<String, Object> paramMap, @PathVariable int pageNum, ModelMap mm) {
		Page<${tableNameClass}> page = ${tableNameVariable}Biz.queryForPage(paramMap, pageNum);
		mm.addAttribute("page", page);
		mm.addAttribute("paramMap", paramMap);
		return "list";
	}

	@RequestMapping("add")
	public String add() {
		// TODO 跳转到添加页面，请配置页面路径
		return "add";
	}

	@RequestMapping("save")
	public String save(@ModelAttribute ${tableNameClass} ${tableNameVariable}) {
		${tableNameVariable}Biz.save(${tableNameVariable});
		// TODO 创建数据，请配置页面路径
		return "save";
	}
#if($primaryKey)

	@RequestMapping("edit/{${primaryKey.pkNameVariable}}")
	public String edit(@PathVariable ${primaryKey.pkType} ${primaryKey.pkNameVariable}, ModelMap mm) {
		${tableNameClass} ${tableNameVariable} = ${tableNameVariable}Biz.queryBy${primaryKey.pkName}(${primaryKey.pkNameVariable});
		mm.put("${tableNameVariable}Ent", ${tableNameVariable});
		// TODO 跳转到编辑页面，请配置页面路径
		return "edit";
	}

	@RequestMapping("update")
	public String update(@ModelAttribute ${tableNameClass} ${tableNameVariable}, ModelMap mm) {
		${tableNameVariable}Biz.updateBy${primaryKey.pkName}(${tableNameVariable});
		// TODO 更新数据，请配置页面路径
		return "update";
	}

	@RequestMapping("delete/{${primaryKey.pkNameVariable}}")
	public String delete(@PathVariable ${primaryKey.pkType} ${primaryKey.pkNameVariable}, ModelMap mm) {
		${tableNameVariable}Biz.deleteBy${primaryKey.pkName}(${primaryKey.pkNameVariable});
		// TODO 删除数据，请配置页面路径
		return "delete";
	}
#end
}

