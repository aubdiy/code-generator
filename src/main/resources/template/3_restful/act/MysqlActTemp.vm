package ${systemPackage}.act;

import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;
import java.util.Map;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import ${systemPackage}.biz.${tableNameClass}Biz;
import ${systemPackage}.po.${tableNameClass}Po;
import ${basePackage}.scaffolding.Page;
import ${basePackage}.scaffolding.RestfulParam;
import ${basePackage}.scaffolding.Response;

@RestController
@RequestMapping("/${tableNameVariable}s")
public class ${tableNameClass}Act {
    @Resource
    private ${tableNameClass}Biz ${tableNameVariable}Biz;

    @RequestMapping(method = RequestMethod.GET)
    public String doGet(@RequestParam Map<String, String> paramMap,
        HttpServletRequest request, HttpServletResponse response) {
        RestfulParam param = new RestfulParam(request, response, paramMap);
        Page<${tableNameClass}Po> ${tableNameVariable}Pos = ${tableNameVariable}Biz.queryForPage(param);
        return new Response(${tableNameVariable}Pos).toString();
    }

    @RequestMapping(method = RequestMethod.POST)
    public String doPost(@RequestParam Map<String, String> paramMap,
        HttpServletRequest request, HttpServletResponse response) {
        RestfulParam param = new RestfulParam(request, response, paramMap);
        ${tableNameClass}Po ${tableNameVariable}Po = ${tableNameVariable}Biz.create(param);
        return new Response(${tableNameVariable}Po).toString();
    }

#if($primaryKey)
    @RequestMapping(method = RequestMethod.PUT)
    public String doPut(@RequestParam Map<String, String> paramMap,
        HttpServletRequest request, HttpServletResponse response) {
        RestfulParam param = new RestfulParam(request, response, paramMap);
        ${tableNameClass}Po ${tableNameVariable}Po = ${tableNameVariable}Biz.updateBy${primaryKey.pkName}(param);
        return new Response(${tableNameVariable}Po).toString();
    }

    @RequestMapping(method = RequestMethod.DELETE)
    public String doDelete(@RequestParam Map<String, String> paramMap,
        HttpServletRequest request, HttpServletResponse response) {
        RestfulParam param = new RestfulParam(request, response, paramMap);
        ${tableNameVariable}Biz.deleteBy${primaryKey.pkName}(param);
        return Response.CODE_INFO.OK.toString();
    }
#end
}
